{"ast":null,"code":"var _jsxFileName = \"/Users/nrking0/Code/hackillinois_server/client/src/Components/BecomeMentor/BecomeMentor.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress, DialogContent, Accordion, AccordionSummary, AccordionDetails, Button, TextareaAutosize, FormControlLabel, Checkbox, Select, Dialog, Grid, FormControl, Input, TextField, Typography, DialogTitle } from '@material-ui/core/'; // MenuItem, Paper\n\nimport { MdExpandMore } from 'react-icons/md';\nimport { FaCheck } from 'react-icons/fa';\nconst useStyles = makeStyles({\n  root: {\n    marginTop: '40px',\n    width: '80%',\n    margin: 'auto',\n    marginBottom: '20px'\n  },\n  space: {\n    paddingRight: '10px'\n  },\n  paper: {// padding: '20px',\n  },\n  header: {\n    backgroundColor: '#00B4DB',\n    color: 'black',\n    fontSize: '25px',\n    textAlign: 'center',\n    padding: '20px',\n    fontWeight: 'bold',\n    marginTop: '20px',\n    border: 'solid #00B4DB',\n    borderRadius: '10rem'\n  },\n  content: {\n    width: '95%',\n    margin: 'auto'\n  },\n  subjectSection: {},\n  textArea: {\n    fontFamily: 'Arial',\n    fontSize: '14px',\n    minWidth: '100%',\n    maxWidth: '100%',\n    minHeight: '130px',\n    maxHeight: '130px',\n    resize: \"none\"\n  },\n  submitButton: {\n    backgroundColor: '#33cc33',\n    width: '20%',\n    float: 'right',\n    position: 'relative',\n    display: 'flex',\n    marginTop: '3%',\n    marginRight: '2.5%',\n    '&:hover': {\n      backgroundColor: '#2aa22a'\n    }\n  },\n  dialog: {\n    width: '70%',\n    margin: 'auto',\n    color: 'black',\n    textAlign: 'center'\n  },\n  formTitle: {\n    textAlign: 'center',\n    margin: 'auto'\n  },\n  loading: {\n    fontSize: '20px',\n    margin: 'auto',\n    textAlign: 'center'\n  },\n  dialogContent: {\n    margin: 'auto',\n    padding: '10px',\n    minHeight: '150px',\n    minWidth: '150px',\n    paddingTop: '6%',\n    color: 'green'\n  }\n});\n\nconst BecomeMentor = props => {\n  const classes = useStyles();\n  const [formOpen, setFormOpen] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [formData, setFormData] = useState([{}]);\n  const [alg1, setAlg1] = useState(false);\n  const [alg2, setAlg2] = useState(false);\n  const [preCalc, setPreCalc] = useState(false);\n  const [calc1, setCalc1] = useState(false);\n  const [calc2, setCalc2] = useState(false);\n  const [calc3, setCalc3] = useState(false);\n  const [linearAlg, setLinearAlg] = useState(false);\n  const [difEq, setDifEq] = useState(false);\n  const [discrete, setDiscrete] = useState(false);\n  const [genChem, setGenChem] = useState(false);\n  const [oChem, setOChem] = useState(false);\n  const [anChem, setAnChem] = useState(false);\n  const [physChem, setPhysChem] = useState(false);\n  const [chemLab, setChemLab] = useState(false);\n  const [java, setJava] = useState(false);\n  const [python, setPython] = useState(false);\n  const [c, setC] = useState(false);\n  const [js, setJS] = useState(false);\n  const [webDev, setWebDev] = useState(false);\n  const [backend, setBackend] = useState(false);\n  const [algos, setAlgos] = useState(false);\n  const [data, setData] = useState(false);\n  const [interview, setInterview] = useState(false);\n  const [molecular, setMolecular] = useState(false);\n  const [cellular, setCellular] = useState(false);\n  const [anatomical, setAnatomical] = useState(false);\n  const [ecology, setEcology] = useState(false);\n  const [evolutionary, setEvolutionary] = useState(false);\n  const [genBio, setGenBio] = useState(false);\n  const [genetics, setGenetics] = useState(false);\n  const [bioChem, setBioChem] = useState(false);\n  const [bioPhysics, setBioPhysics] = useState(false);\n  const [writing, setWriting] = useState(false);\n  const [shakespeare, setShakespeare] = useState(false);\n  const [poetry, setPoetry] = useState(false);\n  const [nonfiction, setNonFiction] = useState(false);\n  const [fiction, setFiction] = useState(false);\n  const [novel, setNovel] = useState(false);\n  const [drama, setDrama] = useState(false);\n  const [spanish, setSpanish] = useState(false);\n  const [french, setFrench] = useState(false);\n  const [german, setGerman] = useState(false);\n  const [japanese, setJapanese] = useState(false);\n  const [mandarin, setMandarin] = useState(false);\n  const [hindi, setHindi] = useState(false);\n  const [englishLang, setEnglishLang] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const grades = [{\n    grade: '9th Grade',\n    value: 9\n  }, {\n    grade: '10th Grade',\n    value: 10\n  }, {\n    grade: '11th Grade',\n    value: 11\n  }, {\n    grade: '12th Grade',\n    value: 12\n  }, {\n    grade: 'College Freshmen',\n    value: 13\n  }, {\n    grade: 'College Sophomore',\n    value: 14\n  }, {\n    grade: 'College Junior',\n    value: 15\n  }, {\n    grade: 'College Senior',\n    value: 16\n  }];\n  const formTextFields = ['first-name', 'last-name', 'email', 'phone-number', 'school-grade', 'tutoring-years', 'personal-bio'];\n\n  const openForm = e => {\n    setFormOpen(true);\n  };\n\n  const closeForm = e => {\n    setFormOpen(false);\n  };\n\n  const resetForm = () => {\n    document.getElementById('first-name').value = \"\";\n    document.getElementById('last-name').value = \"\";\n    document.getElementById('email').value = \"\";\n    document.getElementById('phone-number').value = \"\";\n    document.getElementById('school-grade').value = \"\";\n    document.getElementById('tutoring-years').value = \"\";\n    document.getElementById('personal-bio').value = \"\";\n    setAlg1(false);\n    setAlg2(false);\n    setPreCalc(false);\n    setCalc1(false);\n    setCalc2(false);\n    setCalc3(false);\n    setLinearAlg(false);\n    setDifEq(false);\n    setDiscrete(false);\n    setGenChem(false);\n    setOChem(false);\n    setAnChem(false);\n    setPhysChem(false);\n    setChemLab(false);\n    setJava(false);\n    setPython(false);\n    setC(false);\n    setJS(false);\n    setWebDev(false);\n    setBackend(false);\n    setAlgos(false);\n    setData(false);\n    setInterview(false);\n    setGenBio(false);\n    setCellular(false);\n    setAnatomical(false);\n    setEcology(false);\n    setEvolutionary(false);\n    setMolecular(false);\n    setGenetics(false);\n    setBioChem(false);\n    setBioPhysics(false);\n    setWriting(false);\n    setShakespeare(false);\n    setPoetry(false);\n    setNonFiction(false);\n    setFiction(false);\n    setNovel(false);\n    setNovel(false);\n    setDrama(false);\n    setSpanish(false);\n    setFrench(false);\n    setGerman(false);\n    setJapanese(false);\n    setMandarin(false);\n    setHindi(false);\n    setEnglishLang(false);\n  };\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n\n    try {\n      setSubmit(true);\n      var fname = document.getElementById('first-name').value;\n      var lname = document.getElementById('last-name').value;\n      var email = document.getElementById('email').value;\n      var number = document.getElementById('phone-number').value;\n      var grade = document.getElementById('school-grade').value;\n      var years = document.getElementById('tutoring-years').value;\n      var bio = document.getElementById('personal-bio').value;\n      var interestedSubjects = \"\";\n      if (alg1) interestedSubjects += \"Algebra 1, \";\n      if (alg2) interestedSubjects += \"Algebra 2, \";\n      if (preCalc) interestedSubjects += \"Pre-Calculus, \";\n      if (calc1) interestedSubjects += \"Calculus I, \";\n      if (calc2) interestedSubjects += \"Calculus II, \";\n      if (calc3) interestedSubjects += \"Calculus III, \";\n      if (linearAlg) interestedSubjects += \"Linear Algebra, \";\n      if (difEq) interestedSubjects += \"Differential Equations, \";\n      if (discrete) interestedSubjects += \"Discrete Mathematics, \";\n      if (genChem) interestedSubjects += \"General Chemistry, \";\n      if (oChem) interestedSubjects += \"Organic Chemistry, \";\n      if (anChem) interestedSubjects += \"Analytical Chemistry, \";\n      if (physChem) interestedSubjects += \"Physical Chemistry, \";\n      if (chemLab) interestedSubjects += \"Chem Lab Adivse, \";\n      if (java) interestedSubjects += \"Java, \";\n      if (python) interestedSubjects += \"Python, \";\n      if (c) interestedSubjects += \"C/C++/C#, \";\n      if (js) interestedSubjects += \"Javascript/jQuery, \";\n      if (webDev) interestedSubjects += \"Web Development, \";\n      if (backend) interestedSubjects += \"Backend Development, \";\n      if (algos) interestedSubjects += \"Algorithms, \";\n      if (data) interestedSubjects += \"Data Structures, \";\n      if (interview) interestedSubjects += \"Interview Prep, \";\n      if (genBio) interestedSubjects += \"General Biology, \";\n      if (cellular) interestedSubjects += \"Cellular Biology, \";\n      if (anatomical) interestedSubjects += \"Anatomical Sciences, \";\n      if (ecology) interestedSubjects += \"Ecology, \";\n      if (evolutionary) interestedSubjects += \"Evolutionary Biology, \";\n      if (molecular) interestedSubjects += \"Molecular Biology, \";\n      if (genetics) interestedSubjects += \"Genetics, \";\n      if (bioChem) interestedSubjects += \"Biochemistry, \";\n      if (bioPhysics) interestedSubjects += \"Bio Physics, \";\n      if (writing) interestedSubjects += \"Writing Advise, \";\n      if (shakespeare) interestedSubjects += \"Shakespeare, \";\n      if (poetry) interestedSubjects += \"Poetry, \";\n      if (nonfiction) interestedSubjects += \"NonFiction, \";\n      if (fiction) interestedSubjects += \"Fiction, \";\n      if (novel) interestedSubjects += \"Novel, \";\n      if (drama) interestedSubjects += \"Drama, \";\n      if (spanish) interestedSubjects += \"Spanish, \";\n      if (french) interestedSubjects += \"French, \";\n      if (german) interestedSubjects += \"German, \";\n      if (japanese) interestedSubjects += \"Japanese, \";\n      if (mandarin) interestedSubjects += \"Mandarin Chinese, \";\n      if (hindi) interestedSubjects += \"Hindi, \";\n      if (englishLang) interestedSubjects += \"English, \";\n      interestedSubjects = interestedSubjects.substring(0, interestedSubjects.length - 2);\n      const response = await fetch('/mentors', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          fname,\n          lname,\n          email,\n          number,\n          grade,\n          years,\n          bio,\n          interestedSubjects\n        })\n      });\n      console.log(response);\n      setSubmit(false);\n      resetForm();\n      setSuccess(true);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }, \"Become a mentor today!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 77\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }, \"Before COVID-19, student to student collaboration could be difficult to come by especially outside of friend groups, schools, or even states. This collaboration has only become more difficult entering a virtual education environment, however, you can change that! By becoming a mentor, you leave your mark and help other students achieve their goals!\")), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    maxWidth: \"xs\",\n    onClose: () => setSuccess(false),\n    fullWidth: true,\n    open: success,\n    className: classes.dialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, \"Your form submitted successfully!\"), /*#__PURE__*/React.createElement(DialogContent, {\n    className: classes.dialogContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaCheck, {\n    size: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Dialog, {\n    maxWidth: \"xs\",\n    fullWidth: true,\n    open: submit,\n    className: classes.dialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, \"Your form is submitting!\"), /*#__PURE__*/React.createElement(DialogContent, {\n    className: classes.dialogContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    thickness: 4,\n    size: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 21\n    }\n  }, \"General Information\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      margin: 'auto'\n    },\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.space,\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"first-name\",\n    fullWidth: true,\n    variant: \"outlined\",\n    required: true,\n    label: \"First name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"last-name\",\n    fullWidth: true,\n    variant: \"outlined\",\n    required: true,\n    label: \"Last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 25\n    }\n  }, \"Contact\"), /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      margin: 'auto'\n    },\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.space,\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    fullWidth: true,\n    variant: \"outlined\",\n    required: true,\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"phone-number\",\n    placeholder: \"Ex: (123) 456-7890\",\n    fullWidth: true,\n    variant: \"outlined\",\n    label: \"Phone Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 25\n    }\n  }, \"Education\"), /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      margin: 'auto'\n    },\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.space,\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    id: \"school-grade\",\n    native: true,\n    label: \"Grade\",\n    required: true,\n    \"aria-label\": \"Select Grade\",\n    fullWidth: true,\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    value: \"\",\n    label: \"Select Grade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 37\n    }\n  }), grades.map(grade => /*#__PURE__*/React.createElement(\"option\", {\n    value: grade.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 45\n    }\n  }, grade.grade)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"tutoring-years\",\n    fullWidth: true,\n    type: \"number\",\n    variant: \"outlined\",\n    label: \"Years of tutoring...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 25\n    }\n  }, \"Bio\"), /*#__PURE__*/React.createElement(TextareaAutosize, {\n    id: \"personal-bio\",\n    className: classes.textArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 21\n    }\n  }, \"Experience\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 21\n    }\n  }, \"Please only select subjects you would feel comfortable tutoring in!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    className: classes.subjectSection,\n    expandIcon: /*#__PURE__*/React.createElement(MdExpandMore, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 94\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 29\n    }\n  }, \"Mathematics\"), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      margin: 'auto',\n      textAlign: 'center',\n      borderTop: 'solid black',\n      paddingTop: '2%'\n    },\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"algebra1\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: alg1,\n      onClick: () => setAlg1(!alg1),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 54\n      }\n    }),\n    label: \"Algebra 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"algebra2\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      id: \"alg2\",\n      checked: alg2,\n      onClick: () => setAlg2(!alg2),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 54\n      }\n    }),\n    label: \"Algebra 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"precalc\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: preCalc,\n      onClick: () => setPreCalc(!preCalc),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 54\n      }\n    }),\n    label: \"Pre-Calculus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"calculus1\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: calc1,\n      onClick: () => setCalc1(!calc1),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 54\n      }\n    }),\n    label: \"Calculus I\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"calculus2\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: calc2,\n      onClick: () => setCalc2(!calc2),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 54\n      }\n    }),\n    label: \"Calculus II\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"calculus3/multi\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: calc3,\n      onClick: () => setCalc3(!calc3),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 54\n      }\n    }),\n    label: \"Calculus III/Multivariable Calculus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"linearalgebra\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: linearAlg,\n      onClick: () => setLinearAlg(!linearAlg),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 54\n      }\n    }),\n    label: \"Linear Algebra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"difeq\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: difEq,\n      onClick: () => setDifEq(!difEq),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 54\n      }\n    }),\n    label: \"Differential Equations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"discrete\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: discrete,\n      onClick: () => setDiscrete(!discrete),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 54\n      }\n    }),\n    label: \"Discrete Mathematics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 41\n    }\n  }))))), /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    className: classes.subjectSection,\n    expandIcon: /*#__PURE__*/React.createElement(MdExpandMore, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 94\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 29\n    }\n  }, \"Chemistry\"), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      margin: 'auto',\n      textAlign: 'center',\n      borderTop: 'solid black',\n      paddingTop: '2%'\n    },\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"genchem\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: genChem,\n      onClick: () => setGenChem(!genChem),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 54\n      }\n    }),\n    label: \"General Chemistry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"ochem\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: oChem,\n      onClick: () => setOChem(!oChem),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 54\n      }\n    }),\n    label: \"Organic Chemistry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"anchem\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: anChem,\n      onClick: () => setAnChem(!anChem),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 54\n      }\n    }),\n    label: \"Analytical Chemistry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"phychem\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: physChem,\n      onClick: () => setPhysChem(!physChem),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 54\n      }\n    }),\n    label: \"Physical Chemistry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"chemLabs\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: chemLab,\n      onClick: () => setChemLab(!chemLab),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 54\n      }\n    }),\n    label: \"Chem Lab Advise\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    className: classes.subjectSection,\n    expandIcon: /*#__PURE__*/React.createElement(MdExpandMore, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 94\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 29\n    }\n  }, \"Computer Science\"), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      margin: 'auto',\n      textAlign: 'center',\n      borderTop: 'solid black',\n      paddingTop: '2%'\n    },\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"java\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: java,\n      onClick: () => setJava(!java),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 54\n      }\n    }),\n    label: \"Java\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"python\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: python,\n      onClick: () => setPython(!python),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 54\n      }\n    }),\n    label: \"Python\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"c\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: c,\n      onClick: () => setC(!c),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 54\n      }\n    }),\n    label: \"C/C++/C#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"js\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: js,\n      onClick: () => setJS(!js),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 54\n      }\n    }),\n    label: \"Javascript/jQuery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"webdev\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: webDev,\n      onClick: () => setWebDev(!webDev),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 54\n      }\n    }),\n    label: \"Web Development\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"backend\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: backend,\n      onClick: () => setBackend(!backend),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 54\n      }\n    }),\n    label: \"Backend Development\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"algos\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: algos,\n      onClick: () => setAlgos(!algos),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 54\n      }\n    }),\n    label: \"Algorithms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"data\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: data,\n      onClick: () => setData(!data),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 54\n      }\n    }),\n    label: \"Data Structures\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"interview\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: interview,\n      onClick: () => setInterview(!interview),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 54\n      }\n    }),\n    label: \"Interview Prep\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 41\n    }\n  }))))), /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    className: classes.subjectSection,\n    expandIcon: /*#__PURE__*/React.createElement(MdExpandMore, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 94\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 29\n    }\n  }, \"Biology\"), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      margin: 'auto',\n      textAlign: 'center',\n      borderTop: 'solid black',\n      paddingTop: '2%'\n    },\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"genBio\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: genBio,\n      onClick: () => setGenBio(!genBio),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 54\n      }\n    }),\n    label: \"General Biology\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"cellular\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: cellular,\n      onClick: () => setCellular(!cellular),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 54\n      }\n    }),\n    label: \"Cellular Biology\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"anatomical\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: anatomical,\n      onClick: () => setAnatomical(!anatomical),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 54\n      }\n    }),\n    label: \"Anatomical Sciences\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"ecology\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: ecology,\n      onClick: () => setEcology(!ecology),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 54\n      }\n    }),\n    label: \"Ecology\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"evolutionary\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: evolutionary,\n      onClick: () => setEvolutionary(!evolutionary),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 54\n      }\n    }),\n    label: \"Evolutionary Biology\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"molecular\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: molecular,\n      onClick: () => setMolecular(!molecular),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 54\n      }\n    }),\n    label: \"Molecular Biology\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"genetics\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: genetics,\n      onClick: () => setGenetics(!genetics),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 54\n      }\n    }),\n    label: \"Genetics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"bioChemistry\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: bioChem,\n      onClick: () => setBioChem(!bioChem),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 54\n      }\n    }),\n    label: \"Biochemistry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"biophysics\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: bioPhysics,\n      onClick: () => setBioPhysics(!bioPhysics),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 54\n      }\n    }),\n    label: \"Bio Physics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 41\n    }\n  }))))), /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    className: classes.subjectSection,\n    expandIcon: /*#__PURE__*/React.createElement(MdExpandMore, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 94\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 29\n    }\n  }, \"English/Writing\"), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      margin: 'auto',\n      textAlign: 'center',\n      borderTop: 'solid black',\n      paddingTop: '2%'\n    },\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"writing\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: writing,\n      onClick: () => setWriting(!writing),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 54\n      }\n    }),\n    label: \"Writing advise\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"shakespeare\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: shakespeare,\n      onClick: () => setShakespeare(!shakespeare),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 54\n      }\n    }),\n    label: \"Shakespeare\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"poetry\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: poetry,\n      onClick: () => setPoetry(!poetry),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 54\n      }\n    }),\n    label: \"Poetry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"nonfiction\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: nonfiction,\n      onClick: () => setNonFiction(!nonfiction),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 54\n      }\n    }),\n    label: \"Nonfiction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"fiction\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: fiction,\n      onClick: () => setFiction(!fiction),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 54\n      }\n    }),\n    label: \"Fiction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"novel\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: novel,\n      onClick: () => setNovel(!novel),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 54\n      }\n    }),\n    label: \"Novel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"drama\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: drama,\n      onClick: () => setDrama(!drama),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 54\n      }\n    }),\n    label: \"Drama\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 44\n    }\n  }))))), /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    className: classes.subjectSection,\n    expandIcon: /*#__PURE__*/React.createElement(MdExpandMore, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 94\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 29\n    }\n  }, \"Foreign Language\"), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      margin: 'auto',\n      textAlign: 'center',\n      borderTop: 'solid black',\n      paddingTop: '2%'\n    },\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"spanish\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: spanish,\n      onClick: () => setSpanish(!spanish),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 54\n      }\n    }),\n    label: \"Spanish\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"french\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: french,\n      onClick: () => setFrench(!french),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 54\n      }\n    }),\n    label: \"French\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"german\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: german,\n      onClick: () => setGerman(!german),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 54\n      }\n    }),\n    label: \"German\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"japanese\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: japanese,\n      onClick: () => setJapanese(!japanese),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 54\n      }\n    }),\n    label: \"Japanese\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"Mandarin Chinese\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: mandarin,\n      onClick: () => setMandarin(!mandarin),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 54\n      }\n    }),\n    label: \"Mandarin Chinese\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"hindi\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: hindi,\n      onClick: () => setHindi(!hindi),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 54\n      }\n    }),\n    label: \"Hindi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"english\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: englishLang,\n      onClick: () => setEnglishLang(!englishLang),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 54\n      }\n    }),\n    label: \"English\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 44\n    }\n  })))))), /*#__PURE__*/React.createElement(Button, {\n    onClick: onSubmitForm,\n    className: classes.submitButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nexport default BecomeMentor;","map":{"version":3,"sources":["/Users/nrking0/Code/hackillinois_server/client/src/Components/BecomeMentor/BecomeMentor.js"],"names":["React","useState","makeStyles","CircularProgress","DialogContent","Accordion","AccordionSummary","AccordionDetails","Button","TextareaAutosize","FormControlLabel","Checkbox","Select","Dialog","Grid","FormControl","Input","TextField","Typography","DialogTitle","MdExpandMore","FaCheck","useStyles","root","marginTop","width","margin","marginBottom","space","paddingRight","paper","header","backgroundColor","color","fontSize","textAlign","padding","fontWeight","border","borderRadius","content","subjectSection","textArea","fontFamily","minWidth","maxWidth","minHeight","maxHeight","resize","submitButton","float","position","display","marginRight","dialog","formTitle","loading","dialogContent","paddingTop","BecomeMentor","props","classes","formOpen","setFormOpen","success","setSuccess","formData","setFormData","alg1","setAlg1","alg2","setAlg2","preCalc","setPreCalc","calc1","setCalc1","calc2","setCalc2","calc3","setCalc3","linearAlg","setLinearAlg","difEq","setDifEq","discrete","setDiscrete","genChem","setGenChem","oChem","setOChem","anChem","setAnChem","physChem","setPhysChem","chemLab","setChemLab","java","setJava","python","setPython","c","setC","js","setJS","webDev","setWebDev","backend","setBackend","algos","setAlgos","data","setData","interview","setInterview","molecular","setMolecular","cellular","setCellular","anatomical","setAnatomical","ecology","setEcology","evolutionary","setEvolutionary","genBio","setGenBio","genetics","setGenetics","bioChem","setBioChem","bioPhysics","setBioPhysics","writing","setWriting","shakespeare","setShakespeare","poetry","setPoetry","nonfiction","setNonFiction","fiction","setFiction","novel","setNovel","drama","setDrama","spanish","setSpanish","french","setFrench","german","setGerman","japanese","setJapanese","mandarin","setMandarin","hindi","setHindi","englishLang","setEnglishLang","submit","setSubmit","grades","grade","value","formTextFields","openForm","e","closeForm","resetForm","document","getElementById","onSubmitForm","preventDefault","fname","lname","email","number","years","bio","interestedSubjects","substring","length","response","fetch","method","headers","body","JSON","stringify","console","log","err","error","message","section","map","borderTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress, DialogContent, Accordion, AccordionSummary, AccordionDetails, Button, TextareaAutosize, FormControlLabel, Checkbox, Select, Dialog, Grid, FormControl, Input, TextField, Typography, DialogTitle } from '@material-ui/core/'\n// MenuItem, Paper\nimport { MdExpandMore } from 'react-icons/md';\nimport { FaCheck } from 'react-icons/fa';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: '40px',\n        width: '80%',\n        margin: 'auto',\n        marginBottom: '20px'\n    },\n    space: {\n        paddingRight: '10px'\n    },\n    paper: {\n        // padding: '20px',\n    },\n    header: {\n        backgroundColor: '#00B4DB',\n        color: 'black',\n        fontSize: '25px',\n        textAlign: 'center',\n        padding: '20px',\n        fontWeight: 'bold',\n        marginTop: '20px',\n        border: 'solid #00B4DB',\n        borderRadius: '10rem'\n    },\n    content: {\n        width: '95%',\n        margin: 'auto'\n    },\n    subjectSection: {\n\n    },\n    textArea: {\n        fontFamily: 'Arial',\n        fontSize: '14px',\n        minWidth: '100%',\n        maxWidth: '100%',\n        minHeight: '130px',\n        maxHeight: '130px',\n        resize: \"none\"\n    },\n    submitButton: {\n        backgroundColor: '#33cc33',\n        width: '20%',\n        float: 'right',\n        position: 'relative',\n        display: 'flex',\n        marginTop: '3%',\n        marginRight: '2.5%',\n        '&:hover': {\n            backgroundColor: '#2aa22a',\n        }\n    },\n    dialog: {\n        width: '70%',\n        margin: 'auto',\n        color: 'black',\n        textAlign: 'center'\n    },\n    formTitle: {\n        textAlign: 'center',\n        margin: 'auto'\n    },\n    loading: {\n        fontSize: '20px',\n        margin: 'auto',\n        textAlign: 'center'\n    },\n    dialogContent: {\n        margin: 'auto',\n        padding: '10px',\n        minHeight: '150px',\n        minWidth: '150px',\n        paddingTop: '6%',\n        color: 'green'\n    }\n});\n\nconst BecomeMentor = (props) => {\n    const classes = useStyles();\n    const [formOpen, setFormOpen] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [formData, setFormData] = useState([{}]);\n\n    const [alg1, setAlg1] = useState(false);\n    const [alg2, setAlg2] = useState(false);\n    const [preCalc, setPreCalc] = useState(false);\n    const [calc1, setCalc1] = useState(false);\n    const [calc2, setCalc2] = useState(false);\n    const [calc3, setCalc3] = useState(false);\n    const [linearAlg, setLinearAlg] = useState(false);\n    const [difEq, setDifEq] = useState(false);\n    const [discrete, setDiscrete] = useState(false);\n\n    const [genChem, setGenChem] = useState(false);\n    const [oChem, setOChem] = useState(false);\n    const [anChem, setAnChem] = useState(false);\n    const [physChem, setPhysChem] = useState(false);\n    const [chemLab, setChemLab] = useState(false);\n\n    const [java, setJava] = useState(false);\n    const [python, setPython] = useState(false);\n    const [c, setC] = useState(false);\n    const [js, setJS] = useState(false);\n    const [webDev, setWebDev] = useState(false);\n    const [backend, setBackend] = useState(false);\n    const [algos, setAlgos] = useState(false);\n    const [data, setData] = useState(false);\n    const [interview, setInterview] = useState(false);\n\n    const [molecular, setMolecular] = useState(false);\n    const [cellular, setCellular] = useState(false);\n    const [anatomical, setAnatomical] = useState(false);\n    const [ecology, setEcology] = useState(false);\n    const [evolutionary, setEvolutionary] = useState(false);\n    const [genBio, setGenBio] = useState(false);\n    const [genetics, setGenetics] = useState(false);\n    const [bioChem, setBioChem] = useState(false);\n    const [bioPhysics, setBioPhysics] = useState(false);\n\n    const [writing, setWriting] = useState(false);\n    const [shakespeare, setShakespeare] = useState(false);\n    const [poetry, setPoetry] = useState(false);\n    const [nonfiction, setNonFiction] = useState(false);\n    const [fiction, setFiction] = useState(false);\n    const [novel, setNovel] = useState(false);\n    const [drama, setDrama] = useState(false);\n\n    const [spanish, setSpanish] = useState(false);\n    const [french, setFrench] = useState(false);\n    const [german, setGerman] = useState(false);\n    const [japanese, setJapanese] = useState(false);\n    const [mandarin, setMandarin] = useState(false);\n    const [hindi, setHindi] = useState(false);\n    const [englishLang, setEnglishLang] = useState(false);\n    const [submit, setSubmit] = useState(false);\n\n    const grades = [\n        { grade: '9th Grade', value: 9 },\n        { grade: '10th Grade', value: 10 },\n        { grade: '11th Grade', value: 11 },\n        { grade: '12th Grade', value: 12 },\n        { grade: 'College Freshmen', value: 13 },\n        { grade: 'College Sophomore', value: 14 },\n        { grade: 'College Junior', value: 15 },\n        { grade: 'College Senior', value: 16 },\n    ];\n\n    const formTextFields = [\n        'first-name',\n        'last-name',\n        'email',\n        'phone-number',\n        'school-grade',\n        'tutoring-years',\n        'personal-bio'\n    ]\n\n\n    const openForm = e => {\n        setFormOpen(true);\n    }\n\n    const closeForm = e => {\n        setFormOpen(false);\n    }\n\n    const resetForm = () => {\n        document.getElementById('first-name').value = \"\";\n        document.getElementById('last-name').value = \"\";\n        document.getElementById('email').value= \"\";\n        document.getElementById('phone-number').value = \"\";\n        document.getElementById('school-grade').value = \"\";\n        document.getElementById('tutoring-years').value = \"\";\n        document.getElementById('personal-bio').value = \"\";\n        setAlg1(false);\n        setAlg2(false);\n        setPreCalc(false);\n        setCalc1(false);\n        setCalc2(false);\n        setCalc3(false);\n        setLinearAlg(false);\n        setDifEq(false);\n        setDiscrete(false);\n        setGenChem(false);\n        setOChem(false);\n        setAnChem(false);\n        setPhysChem(false);\n        setChemLab(false);\n        setJava(false);\n        setPython(false);\n        setC(false);\n        setJS(false);\n        setWebDev(false);\n        setBackend(false);\n        setAlgos(false);\n        setData(false);\n        setInterview(false);\n        setGenBio(false);\n        setCellular(false);\n        setAnatomical(false);\n        setEcology(false);\n        setEvolutionary(false);\n        setMolecular(false);\n        setGenetics(false);\n        setBioChem(false);\n        setBioPhysics(false);\n        setWriting(false);\n        setShakespeare(false);\n        setPoetry(false);\n        setNonFiction(false);\n        setFiction(false);\n        setNovel(false);\n        setNovel(false);\n        setDrama(false);\n        setSpanish(false);\n        setFrench(false);\n        setGerman(false);\n        setJapanese(false);\n        setMandarin(false);\n        setHindi(false);\n        setEnglishLang(false);\n    }\n\n    const onSubmitForm = async(e) => {\n        e.preventDefault();\n        try {\n            setSubmit(true);\n            var fname = document.getElementById('first-name').value;\n            var lname = document.getElementById('last-name').value;\n            var email = document.getElementById('email').value;\n            var number = document.getElementById('phone-number').value;\n            var grade = document.getElementById('school-grade').value;\n            var years = document.getElementById('tutoring-years').value;\n            var bio = document.getElementById('personal-bio').value;\n            \n            var interestedSubjects = \"\";\n            if(alg1) interestedSubjects +=\"Algebra 1, \";\n            if(alg2) interestedSubjects +=\"Algebra 2, \";\n            if(preCalc) interestedSubjects +=\"Pre-Calculus, \";\n            if(calc1) interestedSubjects +=\"Calculus I, \";\n            if(calc2) interestedSubjects +=\"Calculus II, \";\n            if(calc3) interestedSubjects +=\"Calculus III, \";\n            if(linearAlg) interestedSubjects +=\"Linear Algebra, \";\n            if(difEq) interestedSubjects +=\"Differential Equations, \";\n            if(discrete) interestedSubjects +=\"Discrete Mathematics, \";\n\n            if(genChem) interestedSubjects +=\"General Chemistry, \";\n            if(oChem) interestedSubjects +=\"Organic Chemistry, \";\n            if(anChem) interestedSubjects +=\"Analytical Chemistry, \";\n            if(physChem) interestedSubjects +=\"Physical Chemistry, \";\n            if(chemLab) interestedSubjects +=\"Chem Lab Adivse, \"; \n    \n            if(java) interestedSubjects +=\"Java, \";\n            if(python) interestedSubjects +=\"Python, \";\n            if(c) interestedSubjects +=\"C/C++/C#, \";\n            if(js) interestedSubjects +=\"Javascript/jQuery, \";\n            if(webDev) interestedSubjects +=\"Web Development, \";\n            if(backend) interestedSubjects +=\"Backend Development, \";\n            if(algos) interestedSubjects +=\"Algorithms, \";\n            if(data) interestedSubjects +=\"Data Structures, \";\n            if(interview) interestedSubjects +=\"Interview Prep, \";\n    \n            if(genBio) interestedSubjects +=\"General Biology, \";\n            if(cellular) interestedSubjects +=\"Cellular Biology, \";\n            if(anatomical) interestedSubjects +=\"Anatomical Sciences, \";\n            if(ecology) interestedSubjects +=\"Ecology, \";\n            if(evolutionary) interestedSubjects +=\"Evolutionary Biology, \";\n            if(molecular) interestedSubjects +=\"Molecular Biology, \";\n            if(genetics) interestedSubjects +=\"Genetics, \";\n            if(bioChem) interestedSubjects +=\"Biochemistry, \";\n            if(bioPhysics) interestedSubjects +=\"Bio Physics, \";\n    \n            if(writing) interestedSubjects +=\"Writing Advise, \";\n            if(shakespeare) interestedSubjects +=\"Shakespeare, \";\n            if(poetry) interestedSubjects +=\"Poetry, \";\n            if(nonfiction) interestedSubjects +=\"NonFiction, \";\n            if(fiction) interestedSubjects +=\"Fiction, \";\n            if(novel) interestedSubjects +=\"Novel, \";\n            if(drama) interestedSubjects +=\"Drama, \";\n    \n            if(spanish) interestedSubjects +=\"Spanish, \";\n            if(french) interestedSubjects +=\"French, \";\n            if(german) interestedSubjects +=\"German, \";\n            if(japanese) interestedSubjects +=\"Japanese, \";\n            if(mandarin) interestedSubjects +=\"Mandarin Chinese, \";\n            if(hindi) interestedSubjects +=\"Hindi, \";\n            if(englishLang) interestedSubjects +=\"English, \";\n            interestedSubjects = interestedSubjects.substring(0, interestedSubjects.length-2);\n\n            const response = await fetch('/mentors', {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\" },\n                body: JSON.stringify({fname, lname, email, number, grade, years, bio, interestedSubjects})\n            });\n            console.log(response);\n            setSubmit(false);\n            resetForm();\n            setSuccess(true);\n        } catch(err){\n            console.error(err.message);\n        }\n    }\n\n\n    \n\n    return (\n        <div className={classes.root}>\n            {/* <Paper className={classes.paper}> */}\n            <div className={classes.formTitle}>\n                <Typography variant=\"h3\">Become a mentor today!</Typography><br />\n                <Typography variant=\"subtitle1\">\n                    Before COVID-19, student to student collaboration could be difficult to come by especially outside of friend groups,\n                    schools, or even states. This collaboration has only become more difficult entering a virtual education environment,\n                    however, you can change that! By becoming a mentor, you leave your mark and help other students achieve their goals!\n                </Typography>\n            </div> <br />\n            <Dialog maxWidth='xs'  onClose={() => setSuccess(false)} fullWidth open={success} className={classes.dialog}>\n                <h3>Your form submitted successfully!</h3>\n                <DialogContent className={classes.dialogContent}>\n                    <FaCheck size={80} />\n                </DialogContent>\n            </Dialog>\n            <Dialog maxWidth='xs' fullWidth open={submit} className={classes.dialog}>\n                <h3>Your form is submitting!</h3>\n                <DialogContent className={classes.dialogContent}>\n                    <CircularProgress thickness={4} size={80} />\n                </DialogContent>\n            </Dialog>\n\n            <FormControl fullWidth>\n                <div className={classes.section}>\n                    <div className={classes.header}>General Information</div>\n                    <div className={classes.content}>\n                        <h3>Name</h3>\n                        <Grid style={{ margin: 'auto' }} container>\n                            <Grid className={classes.space} item xs={6}>\n                                <TextField id='first-name' fullWidth variant=\"outlined\" required label=\"First name\" />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <TextField id='last-name' fullWidth variant=\"outlined\" required label=\"Last name\" />\n                            </Grid>\n                        </Grid>\n                        <h3>Contact</h3>\n                        <Grid style={{ margin: 'auto' }} container>\n                            <Grid className={classes.space} item xs={6}>\n                                <TextField id='email' fullWidth variant=\"outlined\" required label=\"Email\" />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <TextField id='phone-number' placeholder=\"Ex: (123) 456-7890\" fullWidth variant=\"outlined\" label=\"Phone Number\" />\n                            </Grid>\n                        </Grid>\n                        <h3>Education</h3>\n                        <Grid style={{ margin: 'auto' }} container>\n                            <Grid className={classes.space} item xs={6}>\n                                <Select\n                                    id='school-grade'\n                                    native\n                                    label=\"Grade\"\n                                    required\n                                    aria-label=\"Select Grade\"\n                                    fullWidth\n                                    defaultValue=\"\"\n                                >\n                                    <option disabled value=\"\" label=\"Select Grade\" />\n                                    {\n                                        grades.map((grade) =>\n                                            <option value={grade.value}>{grade.grade}</option>\n                                        )\n                                    }\n                                </Select>\n\n                            </Grid>\n                            <Grid item xs={6}>\n                                <TextField id='tutoring-years' fullWidth type=\"number\" variant=\"outlined\" label=\"Years of tutoring...\" />\n                            </Grid>\n                        </Grid>\n                        <h3>Bio</h3>\n                        <TextareaAutosize id='personal-bio' className={classes.textArea} />\n                    </div>\n                    <div className={classes.header}>Experience</div>\n                    <p style={{ textAlign: 'center' }}>Please only select subjects you would feel comfortable tutoring in!</p>\n                    <div className={classes.content}>\n                        <Accordion>\n                            <AccordionSummary className={classes.subjectSection} expandIcon={<MdExpandMore />}>\n                                Mathematics\n                                        </AccordionSummary>\n                            <AccordionDetails>\n                                <Grid style={{ margin: 'auto', textAlign: 'center', borderTop: 'solid black', paddingTop: '2%' }} container>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"algebra1\"\n                                            control={<Checkbox checked={alg1} onClick={() => setAlg1(!alg1)} color=\"primary\" />}\n                                            label=\"Algebra 1\"\n                                        />\n                                        <br />\n                                        <FormControlLabel\n                                            value=\"algebra2\"\n                                            control={<Checkbox id=\"alg2\" checked={alg2} onClick={() => setAlg2(!alg2)} color=\"primary\" />}\n                                            label=\"Algebra 2\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"precalc\"\n                                            control={<Checkbox checked={preCalc} onClick={() => setPreCalc(!preCalc)} color=\"primary\" />}\n                                            label=\"Pre-Calculus\"\n                                        /> <br />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"calculus1\"\n                                            control={<Checkbox checked={calc1} onClick={() => setCalc1(!calc1)} color=\"primary\" />}\n                                            label=\"Calculus I\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"calculus2\"\n                                            control={<Checkbox checked={calc2} onClick={() => setCalc2(!calc2)} color=\"primary\" />}\n                                            label=\"Calculus II\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"calculus3/multi\"\n                                            control={<Checkbox checked={calc3} onClick={() => setCalc3(!calc3)} color=\"primary\" />}\n                                            label=\"Calculus III/Multivariable Calculus\"\n                                        /> <br />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"linearalgebra\"\n                                            control={<Checkbox checked={linearAlg} onClick={() => setLinearAlg(!linearAlg)} color=\"primary\" />}\n                                            label=\"Linear Algebra\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"difeq\"\n                                            control={<Checkbox checked={difEq} onClick={() => setDifEq(!difEq)} color=\"primary\" />}\n                                            label=\"Differential Equations\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"discrete\"\n                                            control={<Checkbox checked={discrete} onClick={() => setDiscrete(!discrete)} color=\"primary\" />}\n                                            label=\"Discrete Mathematics\"\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                            </AccordionDetails>\n                        </Accordion>\n                        <Accordion>\n                            <AccordionSummary className={classes.subjectSection} expandIcon={<MdExpandMore />} >\n                                Chemistry\n                                        </AccordionSummary>\n                            <AccordionDetails>\n                                <Grid style={{ margin: 'auto', textAlign: 'center', borderTop: 'solid black', paddingTop: '2%' }} container>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"genchem\"\n                                            control={<Checkbox checked={genChem} onClick={() => setGenChem(!genChem)} color=\"primary\" />}\n                                            label=\"General Chemistry\"\n                                        />\n                                        <br />\n                                        <FormControlLabel\n                                            value=\"ochem\"\n                                            control={<Checkbox checked={oChem} onClick={() => setOChem(!oChem)} color=\"primary\" />}\n                                            label=\"Organic Chemistry\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"anchem\"\n                                            control={<Checkbox checked={anChem} onClick={() => setAnChem(!anChem)} color=\"primary\" />}\n                                            label=\"Analytical Chemistry\"\n                                        /> <br />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"phychem\"\n                                            control={<Checkbox checked={physChem} onClick={() => setPhysChem(!physChem)} color=\"primary\" />}\n                                            label=\"Physical Chemistry\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"chemLabs\"\n                                            control={<Checkbox checked={chemLab} onClick={() => setChemLab(!chemLab)} color=\"primary\" />}\n                                            label=\"Chem Lab Advise\"\n                                        /> <br />\n                                    </Grid>\n                                    <Grid item xs>\n\n                                    </Grid>\n                                </Grid>\n                            </AccordionDetails>\n                        </Accordion>\n                        <Accordion>\n                            <AccordionSummary className={classes.subjectSection} expandIcon={<MdExpandMore />}>\n                                Computer Science\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Grid style={{ margin: 'auto', textAlign: 'center', borderTop: 'solid black', paddingTop: '2%' }} container>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"java\"\n                                            control={<Checkbox checked={java} onClick={() => setJava(!java)} color=\"primary\" />}\n                                            label=\"Java\"\n                                        />\n                                        <br />\n                                        <FormControlLabel\n                                            value=\"python\"\n                                            control={<Checkbox checked={python} onClick={() => setPython(!python)} color=\"primary\" />}\n                                            label=\"Python\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"c\"\n                                            control={<Checkbox checked={c} onClick={() => setC(!c)} color=\"primary\" />}\n                                            label=\"C/C++/C#\"\n                                        /> <br />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"js\"\n                                            control={<Checkbox checked={js} onClick={() => setJS(!js)} color=\"primary\" />}\n                                            label=\"Javascript/jQuery\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"webdev\"\n                                            control={<Checkbox checked={webDev} onClick={() => setWebDev(!webDev)} color=\"primary\" />}\n                                            label=\"Web Development\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"backend\"\n                                            control={<Checkbox checked={backend} onClick={() => setBackend(!backend)} color=\"primary\" />}\n                                            label=\"Backend Development\"\n                                        /> <br />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"algos\"\n                                            control={<Checkbox checked={algos} onClick={() => setAlgos(!algos)} color=\"primary\" />}\n                                            label=\"Algorithms\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"data\"\n                                            control={<Checkbox checked={data} onClick={() => setData(!data)} color=\"primary\" />}\n                                            label=\"Data Structures\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"interview\"\n                                            control={<Checkbox checked={interview} onClick={() => setInterview(!interview)} color=\"primary\" />}\n                                            label=\"Interview Prep\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </AccordionDetails>\n                        </Accordion>\n                        <Accordion>\n                            <AccordionSummary className={classes.subjectSection} expandIcon={<MdExpandMore />}>\n                                Biology\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Grid style={{ margin: 'auto', textAlign: 'center', borderTop: 'solid black', paddingTop: '2%' }} container>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"genBio\"\n                                            control={<Checkbox checked={genBio} onClick={() => setGenBio(!genBio)} color=\"primary\" />}\n                                            label=\"General Biology\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"cellular\"\n                                            control={<Checkbox checked={cellular} onClick={() => setCellular(!cellular)} color=\"primary\" />}\n                                            label=\"Cellular Biology\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"anatomical\"\n                                            control={<Checkbox checked={anatomical} onClick={() => setAnatomical(!anatomical)} color=\"primary\" />}\n                                            label=\"Anatomical Sciences\"\n                                        /> <br />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"ecology\"\n                                            control={<Checkbox checked={ecology} onClick={() => setEcology(!ecology)} color=\"primary\" />}\n                                            label=\"Ecology\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"evolutionary\"\n                                            control={<Checkbox checked={evolutionary} onClick={() => setEvolutionary(!evolutionary)} color=\"primary\" />}\n                                            label=\"Evolutionary Biology\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"molecular\"\n                                            control={<Checkbox checked={molecular} onClick={() => setMolecular(!molecular)} color=\"primary\" />}\n                                            label=\"Molecular Biology\"\n                                        />\n                                        <br />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"genetics\"\n                                            control={<Checkbox checked={genetics} onClick={() => setGenetics(!genetics)} color=\"primary\" />}\n                                            label=\"Genetics\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"bioChemistry\"\n                                            control={<Checkbox checked={bioChem} onClick={() => setBioChem(!bioChem)} color=\"primary\" />}\n                                            label=\"Biochemistry\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"biophysics\"\n                                            control={<Checkbox checked={bioPhysics} onClick={() => setBioPhysics(!bioPhysics)} color=\"primary\" />}\n                                            label=\"Bio Physics\"\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                            </AccordionDetails>\n                        </Accordion>\n                        <Accordion>\n                            <AccordionSummary className={classes.subjectSection} expandIcon={<MdExpandMore />}>\n                                English/Writing\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Grid style={{ margin: 'auto', textAlign: 'center', borderTop: 'solid black', paddingTop: '2%' }} container>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"writing\"\n                                            control={<Checkbox checked={writing} onClick={() => setWriting(!writing)} color=\"primary\" />}\n                                            label=\"Writing advise\"\n                                        />\n                                        <br />\n                                        <FormControlLabel\n                                            value=\"shakespeare\"\n                                            control={<Checkbox checked={shakespeare} onClick={() => setShakespeare(!shakespeare)} color=\"primary\" />}\n                                            label=\"Shakespeare\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"poetry\"\n                                            control={<Checkbox checked={poetry} onClick={() => setPoetry(!poetry)} color=\"primary\" />}\n                                            label=\"Poetry\"\n                                        /> <br />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"nonfiction\"\n                                            control={<Checkbox checked={nonfiction} onClick={() => setNonFiction(!nonfiction)} color=\"primary\" />}\n                                            label=\"Nonfiction\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"fiction\"\n                                            control={<Checkbox checked={fiction} onClick={() => setFiction(!fiction)} color=\"primary\" />}\n                                            label=\"Fiction\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"novel\"\n                                            control={<Checkbox checked={novel} onClick={() => setNovel(!novel)} color=\"primary\" />}\n                                            label=\"Novel\"\n                                        /> <br />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"drama\"\n                                            control={<Checkbox checked={drama} onClick={() => setDrama(!drama)} color=\"primary\" />}\n                                            label=\"Drama\"\n                                        /> <br />\n                                    </Grid>\n                                </Grid>\n                            </AccordionDetails>\n                        </Accordion>\n                        <Accordion>\n                            <AccordionSummary className={classes.subjectSection} expandIcon={<MdExpandMore />}>\n                                Foreign Language\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Grid style={{ margin: 'auto', textAlign: 'center', borderTop: 'solid black', paddingTop: '2%' }} container>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"spanish\"\n                                            control={<Checkbox checked={spanish} onClick={() => setSpanish(!spanish)} color=\"primary\" />}\n                                            label=\"Spanish\"\n                                        />\n                                        <br />\n                                        <FormControlLabel\n                                            value=\"french\"\n                                            control={<Checkbox checked={french} onClick={() => setFrench(!french)} color=\"primary\" />}\n                                            label=\"French\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"german\"\n                                            control={<Checkbox checked={german} onClick={() => setGerman(!german)} color=\"primary\" />}\n                                            label=\"German\"\n                                        /> <br />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"japanese\"\n                                            control={<Checkbox checked={japanese} onClick={() => setJapanese(!japanese)} color=\"primary\" />}\n                                            label=\"Japanese\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"Mandarin Chinese\"\n                                            control={<Checkbox checked={mandarin} onClick={() => setMandarin(!mandarin)} color=\"primary\" />}\n                                            label=\"Mandarin Chinese\"\n                                        /> <br />\n                                        <FormControlLabel\n                                            value=\"hindi\"\n                                            control={<Checkbox checked={hindi} onClick={() => setHindi(!hindi)} color=\"primary\" />}\n                                            label=\"Hindi\"\n                                        /> <br />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <FormControlLabel\n                                            value=\"english\"\n                                            control={<Checkbox checked={englishLang} onClick={() => setEnglishLang(!englishLang)} color=\"primary\" />}\n                                            label=\"English\"\n                                        /> <br />\n                                    </Grid>\n                                </Grid>\n                            </AccordionDetails>\n                        </Accordion>\n                    </div>\n                    <Button onClick={onSubmitForm} className={classes.submitButton}>Submit</Button>\n                </div>\n            </FormControl >\n            {/* </Paper> */}\n        </div >\n    );\n}\n\nexport default BecomeMentor;\n"]},"metadata":{},"sourceType":"module"}